<?xml version="1.0" encoding="UTF-8"?>
<!--

     Copyright 2005-2018 Red Hat, Inc.

     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.

-->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

	<bean id="hl7encoder" class="org.apache.camel.component.hl7.HL7MLLPNettyEncoderFactory"/>

	<bean id="hl7decoder" class="org.apache.camel.component.hl7.HL7MLLPNettyDecoderFactory"/>

	<bean id="ackGenerator" class="org.apache.camel.component.hl7.HL7" factory-method="ack" scope="prototype"/>

	<camelContext xmlns="http://camel.apache.org/schema/blueprint">

		<route id="hl7TcpRoute">
			<from uri="netty4:tcp://localhost:8888?sync=true&amp;decoder=#hl7decoder&amp;encoder=#hl7encoder"/>
			<to uri="direct:hl7Main"/>
		</route>

		<route id="hl7FileRoute">
			<from uri="file:work/hl7/input?delete=true&amp;moveFailed=.error&amp;antInclude=*.hl7"/>
			<convertBodyTo type="java.lang.String"/>
			<to uri="direct:hl7Main"/>
		</route>

		<route id="hl7MainRoute">
			<from uri="direct:hl7Main"/>
			<onException>
				<exception>ca.uhn.hl7v2.HL7Exception</exception>
				<handled>
					<constant>true</constant>
				</handled>
				<log message="Got an exception: ${exception.message}"/>
				<transform>
					<ref>ackGenerator</ref>
				</transform>
				<marshal>
					<hl7 validate="true"/>
				</marshal>
				<log message="HL7 Response: ${body}"/>
			</onException>
			<log message="HL7 Request: ${body}"/>
			<unmarshal>
				<hl7 validate="true"/>
			</unmarshal>
			<enrich>
				<constant>direct:hl7NormalizeAddress</constant>
			</enrich>
			<log message="Enriched HL7 Request: ${body}"/>
			<to uri="mock:hl7MockBackend"/>
			<transform>
				<ref>ackGenerator</ref>
			</transform>
			<marshal>
				<hl7 validate="true"/>
			</marshal>
			<log message="HL7 Response: ${body}"/>
		</route>

		<route id="hl7NormalizeAddressRoute">
			<from uri="direct:hl7NormalizeAddress"/>
			<transform>
				<groovy>
					<![CDATA[
          adt = request?.body;
          adt.PID.patientAddress.each {
            it.streetAddress.value = it.streetAddress.value.replaceAll(/(?i)ST\.?/, 'STREET')
          };
          request.body = adt;
          ]]>
				</groovy>
			</transform>
		</route>

	</camelContext>

</blueprint>
