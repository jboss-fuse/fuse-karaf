#
#  Copyright 2005-2018 Red Hat, Inc.
#
#  Red Hat licenses this file to you under the Apache License, version
#  2.0 (the "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
#  implied.  See the License for the specific language governing
#  permissions and limitations under the License.
#

#
# see: https://ops4j1.jira.com/wiki/display/paxurl/Aether+Configuration
# There are special `maven:*` commands available in Karaf shell that makes Maven configuration easier
#

#
# Path to the local Maven repository which is used to store artifacts after downloading from remote repositories.
# Artifacts in local repository are used later to avoid remote access (according to configured update policy).
#
# If this property is not configured, it is either extracted from configured settings.xml or defaults to
# \${user.home}/.m2/repository.
# Leaving this option unconfigured makes the system dependent on external configuration, which is not always desired.
#
org.ops4j.pax.url.mvn.localRepository = ${karaf.data}/repository

#
# Path to the local Maven settings file. It can contain additional remote repositories and http proxy configurations.
# The following locations are checked for the existence of the settings.xml file
#  1. looks for the specified url
#  2. if not found looks for \${user.home}/.m2/settings.xml
#  3. if not found looks for \${maven.home}/conf/settings.xml
#  4. if not found looks for \${M2_HOME}/conf/settings.xml
#
org.ops4j.pax.url.mvn.settings = ${karaf.etc}/maven-settings.xml

#
# Comma separated list of locally available repositories scanned when resolving an artifact.
# It contains repositories searched in the first place - before checking remote and local repositories.
# This list should always include ${karaf.home}/${karaf.default.repository} (system directory).
# A repository url can be appended with zero or more of the following flags:
#  - @snapshots  : the repository will be used to resolve snaphots
#  - @noreleases : the repository won't be used to resolve non-SNAPSHOT artifacts
#  - @id=repoid  : mandatory ID for the repository, used to associate mirrors and credentials
#
org.ops4j.pax.url.mvn.defaultRepositories = \
    file:${karaf.home}/${karaf.default.repository}@snapshots@id=karaf.${karaf.default.repository}, \
    file:\${user.home}/.m2/repository@snapshots@id=local, \
    ${karaf.data.uri}kar@id=kar.repository@multi@snapshots, \
    file:${karaf.base}/${karaf.default.repository}@snapshots@id=karaf.child.${karaf.default.repository}

#
# Comma separated list of remote repositories scanned when resolving an artifact.
# It contains repositories searched after resolution fails for "defaultRepositories".
# These are true remote repositories accessed using maven/aether/wagon mechanisms.
# If any repository contains required artifact, it is stored in "localRepository" after being downloaded.
#
# if this list is _prepended_ with '+' sign, all repositories from active profiles defined in settings.xml
# file will be _appended_ to this list.
# A repository url can be appended with zero or more of the following flags:
#  - @snapshots  : the repository contains snapshots
#  - @noreleases : the repository does not contain any released artifacts
#  - @id=repoid  : mandatory ID for the repository, used to associate mirrors and credentials
#
# The default list doesn't contain any repository containing snapshots as it can impact the artifacts resolution.
# You may want to add the following repositories containing snapshots:
#  - https://repository.apache.org/content/groups/snapshots@snapshots@noreleases@id=apache.snapshots
#  - https://oss.sonatype.org/content/repositories/snapshots@snapshots@noreleases@id=sonatype.snapshots
#  - https://oss.sonatype.org/content/repositories/ops4j-snapshots@snapshots@noreleases@id=ops4j.snapshots
#
org.ops4j.pax.url.mvn.repositories = \
    https://repo1.maven.org/maven2@id=maven.central.repo, \
    https://maven.repository.redhat.com/ga@id=redhat.ga.repo, \
    https://maven.repository.redhat.com/earlyaccess/all@id=redhat.ea.repo, \
    https://repository.jboss.org/nexus/content/groups/ea@id=fuseearlyaccess

#
# If set to true, http://repo1.maven.org/maven2@id=central will be used as additional remote repository.
# It is recommended to have Maven Central specified explicitly
#
org.ops4j.pax.url.mvn.useFallbackRepositories = false

#
# Update policy affects resolution of SNAPSHOT/LATEST/RELEASE artifacts. Possible values are:
#  - never : if there's local metadata available, never fetch remote version
#  - daily : fetch remote metadata if local copy is more than 1 day old
#  - always : always fetch remote metadata when resolving SNAPSHOT/LATEST/RELEASE artifacts
#  - interval:N : similar to "daily", but using N as number of minutes
#
org.ops4j.pax.url.mvn.globalUpdatePolicy = daily

#
# Checksum policy is used after resolving remote artifact. SHA1/MD5 checksums are fetched and compared with checsum
# of the artifacts. Possible values are:
#  - ignore : ignore possible differences
#  - warn : print a WARN message to logs
#  - fail : resolution fails if there's difference between calculated and fetched checksum
#
org.ops4j.pax.url.mvn.globalChecksumPolicy = warn

#
# Canonical Maven behavior is to never attempt downloading of normal (non SNAPSHOT) artifacts when there's local
# copy available.
# Turn on (true) or off (false) non-canonical Maven behavior - updating locally available, non SNAPSHOT artifacts
# according to globalUpdatePolicy
#
org.ops4j.pax.url.mvn.updateReleases = true

#
# If set to true, the following property will not allow unknown certificates to be used
# when accessing Maven repositories through TLS
#
org.ops4j.pax.url.mvn.certificateCheck = true

#
# If set to true, no remote repository will be accessed when resolving artifacts
#
org.ops4j.pax.url.mvn.offline = false

#
# socket and connection configuration
#

# default value for connection and read timeouts, when socket.readTimeout and socket.connectionTimeout
# are not specified
org.ops4j.pax.url.mvn.timeout = 5000
# timeout in ms when establishing http connection during artifact resolution
org.ops4j.pax.url.mvn.socket.connectionTimeout = 5000
# timeout in ms when reading data after connecting to remote repository
org.ops4j.pax.url.mvn.socket.readTimeout = 30000
# SO_KEEPALIVE option for sockets, defaults to false
org.ops4j.pax.url.mvn.socket.keepAlive = false
# SO_LINGER option for sockets, defaults to -1
org.ops4j.pax.url.mvn.socket.linger = -1
# SO_REUSEADDR option for sockets, defaults to false
org.ops4j.pax.url.mvn.socket.reuseAddress = false
# TCP_NODELAY option for sockets, defaults to true
org.ops4j.pax.url.mvn.socket.tcpNoDelay = true
# Configure buffer size for HTTP connections (output and input buffers), defaults to 8192 bytes
org.ops4j.pax.url.mvn.connection.bufferSize = 8192
# Number of connection retries after failure is detected in http client. httpclient uses default value "3"
org.ops4j.pax.url.mvn.connection.retryCount = 1
