<?xml version="1.0" encoding="UTF-8"?>
<!--

     Copyright 2005-2017 Red Hat, Inc.

     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.jboss.fuse</groupId>
        <artifactId>assemblies</artifactId>
        <version>7.0.0.redhat-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>fuse-karaf-minimal</artifactId>
    <packaging>pom</packaging>

    <name>Red Hat Fuse :: Assemblies :: Red Hat Fuse - Karaf minimal distro</name>

    <dependencies>
        <!--
            dependencies with "kar" type will be added as startup (scope=compile), boot (scope=runtime) or
            installed (scope=provided) kars in karaf-maven-plugin
            kars are simply unzipped to working directory (target/assembly) and features XMLs are being
            searched for and used as additional feature repositories (with stage equal to the stage of given kar)
        -->
        <dependency>
            <groupId>org.jboss.fuse</groupId>
            <artifactId>fuse-karaf-framework</artifactId>
            <type>kar</type>
            <scope>compile</scope>
        </dependency>
        <!--
            dependencies with "features" classifier will be used as startup (scope=compile), boot (scope=runtime) or
            installed (scope=provided) repositories in karaf-maven-plugin
            there's no need to explicitly add feature repositories that are found in kar
        -->
        <dependency>
            <groupId>org.apache.karaf.features</groupId>
            <artifactId>framework</artifactId>
            <type>xml</type>
            <classifier>features</classifier>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.karaf.features</groupId>
            <artifactId>standard</artifactId>
            <type>xml</type>
            <classifier>features</classifier>
            <scope>runtime</scope>
        </dependency>
        <!--
            dependencies with "bundle" or "jar" type will be used as startup (scope=compile), boot (scope=runtime) or
            installed (scope=provided) bundles in karaf-maven-plugin
            Apache Karaf takes the fundamental bundles from org.apache.karaf.features:base:jar
            Fuse will specify these bundles at distro level
            (distro = maven artifact with karaf-maven-plugin:assembly goal)
            Only "provided" scope doesn't configure karaf-maven-plugin to generate special feature file in etc/
            as we only want these bundles to be copied to system/ directory
        -->
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.framework</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.karaf</groupId>
            <artifactId>org.apache.karaf.client</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <!--
                    karaf-maven-plugin defines 3 "stages" related 1:1 with Maven scopes:
                     - <scope>compile</scope>  : stage = Startup
                     - <scope>runtime</scope>  : stage = Boot
                     - <scope>provided</scope> : stage = Installed
                    These stages are "implemented" using different Karaf files:
                     - Startup stage: etc/startup.properties - startup features, startup profiles, startup bundles
                       are used to prepare list of bundles to include in etc/startup.properties
                     - Boot stage: etc/org.apache.karaf.features.cfg - manages features available in featuresBoot
                       property and repositories in featuresRepositories property
                     - Install stage: just installs the artifacts in ${karaf.home}/${karaf.default.repository}
                    And finally there are 5 kinds of artifacts that may be declared to belong to one of 3 stages:
                     - <stage>Bundles
                     - <stage>Features
                     - <stage>Profiles
                     - <stage>PropertiesFile
                     - <stage>Repositories
                -->
                <groupId>org.apache.karaf.tooling</groupId>
                <artifactId>karaf-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>process-resources</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>assembly</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>archive</goal>
                        </goals>
                        <configuration>
                            <archiveTarGz>false</archiveTarGz>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <!--
                        explicit <framework> configuration is needed if there's no compile dependency on
                        mvn:org.apache.karaf.features/framework/VERSION/kar or
                        mvn:org.apache.karaf.features/static/VERSION/kar
                    -->
                    <framework>framework</framework>
                    <!--
                        installAllFeaturesByDefault should be false when using custom kar. Otherwise all
                        features from feature repositories found in the kar would be installed by default
                    -->
                    <installAllFeaturesByDefault>false</installAllFeaturesByDefault>
                    <startupFeatures>
                        <!--
                            "framework" feature is implicitly added if not specified
                            it's fundamental feature that starts feature service, configadmin, fileinstall
                            pax-logging and pax-url-aether
                        -->
                        <feature>framework</feature>
                    </startupFeatures>
                    <bootFeatures>
                        <!-- feature:* commands -->
                        <feature>feature</feature>
                        <!-- bundle:* commands -->
                        <feature>bundle</feature>
                        <!-- config:* commands -->
                        <feature>config</feature>
                        <!-- log:* commands -->
                        <feature>log</feature>
                        <!-- package:exports/package:imports commands -->
                        <feature>package</feature>
                        <!-- service:list command -->
                        <feature>service</feature>
                        <!-- system:* commands -->
                        <feature>system</feature>
                        <!-- maven:* commands -->
                        <feature>maven</feature>
                        <!-- Karaf shell support (jline, Ã¦sh) -->
                        <feature>shell</feature>
                        <!-- SSH support (commands and ssh shell) -->
                        <feature>ssh</feature>
                        <!-- Service Component Runtime -->
                        <feature>scr</feature>
                        <!-- Blueprint -->
                        <feature>aries-blueprint</feature>
                        <!-- pax-web: undertow, war, whiteboard -->
                        <feature>pax-http-undertow</feature>
                        <feature>war</feature>
                        <feature>fuse-credential-store</feature>
                    </bootFeatures>
                    <installedFeatures>
                        <feature>wrap</feature>
                        <feature>wrapper</feature>
                    </installedFeatures>
                    <blacklistedFeatures>
                        <feature>pax-*jetty*</feature>
                    </blacklistedFeatures>
                    <blacklistedBundles>
                        <bundle>mvn:org.ops4j.pax.cdi/pax-cdi-jetty-weld</bundle>
                    </blacklistedBundles>
                    <blacklistedRepositories />
                    <libraries>
                        <!--
                            type:=
                                endorsed - library will be stored in lib/endorsed/
                                extension - library will be stored in lib/ext/
                                boot - library will be stored in lib/boot/
                                default (or no type directive) - library will be stored in lib/
                            export:=true - packages from Export-Package MANIFEST.MF header will be added to
                                org.osgi.framework.system.packages.extra property in etc/config.properties
                            delegate:=true - packages from Export-Package MANIFEST.MF header will be added to
                                org.osgi.framework.bootdelegation property in etc/config.properties
                        -->
                        <!-- lib/endorsed -->
                        <library>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xerces/${version.org.apache.servicemix.bundles.xerces};type:=endorsed;export:=true;delegate:=true</library>
                        <library>mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jaxp-api-1.4/${version.org.apache.servicemix.specs};type:=endorsed;export:=true</library>
                        <library>mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jaxb-api-2.2/${version.org.apache.servicemix.specs};type:=endorsed;export:=true</library>
                        <library>mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jaxws-api-2.2/${version.org.apache.servicemix.specs};type:=endorsed;export:=true</library>
                        <library>mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.saaj-api-1.3/${version.org.apache.servicemix.specs};type:=endorsed;export:=true</library>
                        <library>mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.activation-api-1.1/${version.org.apache.servicemix.specs};type:=endorsed;export:=true</library>
                        <library>mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.stax-api-1.2/${version.org.apache.servicemix.specs};type:=endorsed;export:=true</library>
                        <library>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xalan/${version.org.apache.servicemix.bundles.xalan};type:=endorsed;export:=true</library>
                        <library>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xalan-serializer/${version.org.apache.servicemix.bundles.xalan-serializer};type:=endorsed;export:=true</library>
                        <library>mvn:javax.annotation/javax.annotation-api/1.2;type:=endorsed;export:=true</library>
                        <!-- lib -->
                        <library>mvn:org.jboss.fuse.modules/fuse-branding/${project.version};type:=default;export:=false</library>
                        <library>mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.activator/${version.org.apache.servicemix.specs};type:=default;export:=true</library>
                        <library>mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.locator/${version.org.apache.servicemix.specs};type:=default;export:=true</library>
                        <!-- lib/boot -->
                        <library>mvn:org.osgi/org.osgi.core/${version.org.osgi};type:=boot;export:=false</library>
                        <library>mvn:org.apache.karaf/org.apache.karaf.main/${version.org.apache.karaf};type:=boot;export:=false</library>
                        <library>mvn:net.java.dev.jna/jna/${version.net.java.dev.jna};type:=boot;export:=false</library>
                        <library>mvn:net.java.dev.jna/jna-platform/${version.net.java.dev.jna};type:=boot;export:=false</library>
                    </libraries>
                    <pidsToExtract>
                        !jmx.acl*,
                        !org.apache.karaf.command.acl.*,
                        *
                    </pidsToExtract>
                    <javase>1.8</javase>
                    <config>
                        <karaf.delay.console>true</karaf.delay.console>
                    </config>
                    <generateConsistencyReport>${project.build.directory}/assembly/welcome-content</generateConsistencyReport>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
